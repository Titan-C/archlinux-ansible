---
# Defines tasks applicable for postgreSQL
- name: Install Postgres
  package:
    name:
      - postgresql
      - python-psycopg2
    state: present
  tags:
    - dependencies

- name: Ensure PostgreSQL data directory exists.
  file:
    path: "{{ postgresql_data_dir }}"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    state: directory
    mode: 0700

- name: Check if PostgreSQL database is initialized.
  stat:
    path: "{{ postgresql_data_dir }}/PG_VERSION"
  register: pgdata_dir_version

- import_tasks: letsencrypt.yml
  when: postgres_tls_method == "letsencrypt"
  tags:
    - letsencrypt

- import_tasks: self-signed.yml
  when: postgres_tls_method == "self-signed"

- name: Ensure PostgreSQL database is initialized.
  command: "initdb --locale=en_US.UTF-8 -E UTF8 -D {{ postgresql_data_dir }}"
  when: not pgdata_dir_version.stat.exists
  become: true
  become_user: "{{ postgresql_user }}"
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true

- name: Configure global settings.
  template:
    src: "postgresql.conf.j2"
    dest: "{{ postgresql_data_dir }}/postgresql.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: 0644
  notify: restart postgresql

- name: Configure host based authentication (if entries are configured).
  template:
    src: "pg_hba.conf.j2"
    dest: "{{ postgresql_data_dir }}/pg_hba.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: 0600
  notify: restart postgresql
  when: postgresql_hba_entries | length > 0

- name: Ensure PostgreSQL is started and enabled on boot.
  service:
    name: postgresql.service
    state: started
    enabled: yes

- name: "[PostgreSQL] cardano role is created."
  postgresql_user:
    name: "{{ cardano_user }}"
    password: "{{ cardano_db_pwd }}"
    encrypted: yes
    state: present
    role_attr_flags: CREATEDB
  become_user: "{{ postgresql_user }}"
  become: yes

- name: "[PostgreSQL] - Cardano db sync database is created."
  postgresql_db:
    name: "{{ item }}"
    state: present
    owner: "{{ cardano_user }}"
  become_user: "{{ postgresql_user }}"
  become: yes
  with_items: "{{ dbs }}"

# - name: Vaccum db sync database
#   postgresql_query:
#     db: "{{ item }}"
#     query: VACUUM
#     autocommit: yes
#   become_user: "{{ postgresql_user }}"
#   with_items: "{{ dbs }}"

- name: Set firewall rules for PostgreSQL
  ufw: rule=allow port=5432
  tags: ufw
# - name: Checkmk plugins. PostgreSQL
#   get_url:
#     url: http://git.oscarnajera.com/ingrid/check_mk/agents/plugins/mk_postgres.py
#     dest: /usr/lib/check_mk_agent/plugins
#     checksum: sha256:16da3907e9360aa232c8d2040b113b5ac110aa737c45f261c2a6c7a7d956d084
#     mode: 0755
