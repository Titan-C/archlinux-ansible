---
- name: Download cardano-node
  get_url:
    url: "https://hydra.iohk.io/build/{{ node_build }}/download/1/cardano-node-{{ node_version }}-linux.tar.gz"
    dest: /home/orchest/cardano-node-{{ node_version }}-linux.tar.gz
    timeout: 300
    checksum: "{{ node_build_checksum }}"

- name: Create directory to unpack
  file:
    path: /home/orchest/cardano-{{ node_version }}
    state: directory

- name: Decompress cardano-node source
  unarchive:
    src: /home/orchest/cardano-node-{{ node_version }}-linux.tar.gz
    dest: /home/orchest/cardano-{{ node_version }}
    creates: /home/orchest/cardano-{{ node_version }}/cardano-node
    remote_src: yes

- name: Copy cardano-node binaries
  copy:
    src: /home/orchest/cardano-{{ node_version }}/{{ item }}
    dest: /usr/bin/
    owner: root
    group: root
    mode: 0755
    remote_src: yes
  with_items:
    - cardano-node
    - cardano-cli

- name: Create cardano group
  group:
    name: "{{ cardano_user }}"
    state: present
    system: yes

- name: Create cardano user
  user:
    name: "{{ cardano_user }}"
    group: "{{ cardano_user }}"
    system: yes
    state: present
    home: /var/lib/{{ cardano_user }}-node

- name: Set authorized key
  authorized_key:
    user: cardano
    state: present
    key: "{{ lookup('file', 'roles/base/files/nitro_smart.pub') }}"

- name: Create cardano directories
  file:
    path: "{{ item }}"
    mode: 0755
    state: directory
    owner: "{{ cardano_user }}"
    group: "{{ cardano_user }}"
  with_items:
    - /var/lib/{{ cardano_user }}-node/config
    - /var/lib/{{ cardano_user }}-node/db-mainnet
    - /var/lib/{{ cardano_user }}-node/db-testnet
    - /var/lib/{{ cardano_user }}-node/schema

- name: Copy Cardano config files
  copy:
    src: "{{ item[0].name }}-{{ item[1] }}.json"
    dest: "/var/lib/{{ cardano_user }}-node/config/{{ item[0].name }}-{{ item[1] }}.json"
    mode: 0644
  notify: restart {{ item[0].name }}
  with_nested:
    - "{{ networks }}"
    - [
        "config",
        "byron-genesis",
        "shelley-genesis",
        "alonzo-genesis",
        "topology",
      ]

- name: Cardano network service
  template:
    src: cardano-node.service.j2
    dest: /usr/lib/systemd/system/cardano-node-{{ item.name }}.service
  with_items: "{{ networks }}"
  notify:
    - reload systemd daemon
    - restart {{ item.name }}

- name: Enable cardano networks
  service:
    name: "cardano-node-{{ item.name }}.service"
    enabled: yes
    state: started
  with_items: "{{ networks }}"

- import_tasks: postgres.yml
  tags: postgres

- name: Install libsodium
  package:
    name:
      - libsodium
    state: present
  tags:
    - dependencies

- name: Upload cardano-db-sync
  copy:
    # src: /home/titan/dev/cardano/cardano-db-sync/db-sync-node/bin/cardano-db-sync-extended
    src: /home/titan/.cabal/store/ghc-8.10.5/cardano-db-sync-extended-12.0.0-82ca88b5ea55c571eef56b6ca4774fb696d7b8ea8217ae4ecb24063498a02dcc/bin/cardano-db-sync-extended
    dest: /usr/bin/
    owner: root
    group: root
    mode: 0755
  tags: sync

- name: Upload cardano-db-sync config
  template:
    src: db-config.yml.j2
    dest: /var/lib/{{ cardano_user }}-node/config/{{ item.name }}-db-config.yml
    mode: 0755
  with_items: "{{ networks }}"
  tags: sync

- name: Upload cardano-db-sync schemas
  copy:
    src: "{{ item }}"
    dest: /var/lib/{{ cardano_user }}-node/schema
    mode: a+r
    owner: "{{ cardano_user }}"
    group: "{{ cardano_user }}"
    directory_mode: yes
  with_fileglob:
    - /home/titan/dev/cardano/cardano-db-sync/schema/*
  tags: sync

- name: Create db-pg-pass file
  copy:
    dest: /var/lib/{{ cardano_user }}-node/config/pgpass-{{ item.name }}
    content: "/var/run/postgresql:5432:{{ item.name }}:{{ cardano_user }}:{{ cardano_db_pwd }}"
    owner: "{{ cardano_user }}"
    group: "{{ cardano_user }}"
    mode: 0400
  tags: sync
  with_items: "{{ networks }}"

- name: Cardano DB sync service
  template:
    src: cardano-db-sync.service.j2
    dest: /usr/lib/systemd/system/cardano-db-sync-{{ item.name }}.service
  with_items: "{{ networks }}"
  notify:
    - reload systemd daemon
    - restart db-sync {{ item.name }}
  tags: sync

- name: Cardano DB sync service enable
  service:
    name: "cardano-db-sync-{{ item.name }}.service"
    enabled: yes
    state: started
  with_items: "{{ networks }}"
